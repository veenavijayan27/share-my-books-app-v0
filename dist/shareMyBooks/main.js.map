{"version":3,"sources":["./src/app/add-edit-book/add-edit-book.component.ts","./src/app/add-edit-book/add-edit-book.component.html","./src/app/store/reducers/books.reducer.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/authguard.service.ts","./src/app/services/login-register.service.ts","./src/app/store/actions/books.actions.ts","./src/app/store/actions/register.actions.ts","./src/app/store/effects/login.effects.ts","./src/app/store/reducers/register.reducer.ts","./src/app/store/effects/books.effects.ts","./src/app/store/selectors/books.selector.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/store/actions/login.actions.ts","./src/app/services/theme.service.ts","./src/app/app.module.ts","./src/app/services/books.service.ts","./src/app/store/reducers/login.reducer.ts","./src/app/store/effects/register.effects.ts","./src/app/store/selectors/login.selector.ts","./src/app/login-register/login-register.component.ts","./src/app/login-register/login-register.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Update } from '@ngrx/entity';\nimport { Book } from '../models/book';\nimport { NgForm } from '@angular/forms';\nimport { addBook, bookActionTypes, bookLoaded, loadBook } from '../store/actions/books.actions';\nimport { getBookDetails } from '../store/selectors/books.selector';\n\n@Component({\n  selector: 'app-add-edit-book',\n  templateUrl: './add-edit-book.component.html',\n  styleUrls: ['./add-edit-book.component.scss'],\n})\nexport class AddEditBookComponent implements OnInit {\n  book = {} as Book;\n  addBook = true;\n  submitted = false;\n  id: string;\n  tempBook: Book[];\n\n  constructor(\n    private _store: Store,\n    private _router: Router,\n    private _route: ActivatedRoute\n  ) {\n    this._route.paramMap.subscribe((params) => {\n      this.id = params.get('id');\n    });\n\n    // Load book details for edit\n    if (this.id) {\n      this.addBook = false;\n      this._store.dispatch(loadBook({ bookId: this.id }));\n      this._store.select(getBookDetails).subscribe((response) => {\n        this.tempBook = response;\n        this.book = { ...this.tempBook[0] };\n      });\n    }\n  }\n\n  ngOnInit(): void {}\n\n  // Add book details in server\n  OnAddBook(form: NgForm): void {\n    this.submitted = true;\n    if (form.valid) {\n      this._store.dispatch(addBook({ book: this.book }));\n    }\n  }\n\n  // Update book details in server\n  OnUpdateBook(form: NgForm): void {\n    this.submitted = true;\n    if (form.valid) {\n      const update: Update<Book> = {\n        id: this.book.id,\n        changes: {\n          ...this.book,\n          ...form.value,\n        },\n      };\n      this._store.dispatch(bookActionTypes.updateBook({ update }));\n    }\n  }\n}\n","<div class=\"formPane\">\n  <div class=\"formContent\">\n    <div class=\"formDiv\">\n      <h2 *ngIf=\"addBook\" class=\"AddEditHeader\">Add Book Details</h2>\n      <h2 *ngIf=\"!addBook\" class=\"AddEditHeader\">Edit Book Details</h2>\n      <form #bookForm=\"ngForm\">\n        <div class=\"form-group\">\n          <p for=\"title\">Title</p>\n          <input type=\"text\" id=\"title\" name=\"title\" required [(ngModel)]=\"book.title\" />\n        </div>\n        <div class=\"form-group\">\n          <p for=\"author\">Author</p>\n          <input type=\"text\" id=\"author\" name=\"author\" required [(ngModel)]=\"book.author\" />\n        </div>\n        <div class=\"form-group\">\n          <p for=\"description\">Description</p>\n          <textarea type=\"text\" rows=\"3\" id=\"description\" name=\"description\" required\n            [(ngModel)]=\"book.desc\"></textarea>\n        </div>\n        <div class=\"form-group\">\n          <p for=\"category\">Category</p>\n          <input type=\"text\" id=\"category\" name=\"category\" required [(ngModel)]=\"book.category\" />\n        </div>\n        <br>\n        <button [disabled]=\"bookForm.invalid\" *ngIf=\"addBook\" class=\"btn buttonPrimary\" type=\"button\"\n          (click)=\"OnAddBook(bookForm)\">Add</button>\n        <button [disabled]=\"bookForm.invalid\" *ngIf=\"!addBook\" class=\"btn buttonPrimary\" type=\"button\"\n          (click)=\"OnUpdateBook(bookForm)\">\n          Update\n        </button>\n        <button class=\"btn buttonDanger\" routerLink=\"/home\">Cancel</button>\n      </form>\n    </div>\n  </div>\n</div>","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { createReducer, on } from '@ngrx/store';\nimport { Book } from '../../models/book';\nimport { bookActionTypes } from '../actions/books.actions';\n\nexport interface BookState extends EntityState<Book> {\n  booksLoaded: boolean;\n  selectedBookId: number;\n}\n\nexport const adapter: EntityAdapter<Book> = createEntityAdapter<Book>();\n\n// set book inital state\nexport const initialState = adapter.getInitialState({\n  booksLoaded: false,\n  selectedBookId: null,\n});\n\nexport const bookReducer = createReducer(\n  initialState,\n\n  // books loaded reducer\n  on(bookActionTypes.booksLoaded, (state: BookState, action) => {\n    return adapter.setAll(action.books, { ...state, booksLoaded: true });\n  }),\n\n  // book loaded reducer\n  on(bookActionTypes.bookLoaded, (state: BookState, action) => {\n    return adapter.setAll(action.book, { ...state, bookLoaded: true });\n  }),\n\n  // add book reducer\n  on(bookActionTypes.addBook, (state: BookState, action) => {\n    return adapter.addOne(action.book, state);\n  }),\n\n  // delete book reducer\n  on(bookActionTypes.deleteBook, (state: BookState, action) => {\n    return adapter.removeOne(action.bookId, state);\n  }),\n\n  // update book reducer\n  on(bookActionTypes.updateBook, (state: BookState, action) => {\n    return adapter.updateOne(action.update, state);\n  })\n);\n\nexport const { selectAll, selectEntities } = adapter.getSelectors();\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { authSelector } from '../store/selectors/login.selector';\nimport { getAllBooksList } from '../store/selectors/books.selector';\nimport { bookActionTypes } from '../store/actions/books.actions';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  isLoggedIn: boolean;\n  books$: any;\n\n  constructor(private _store: Store) { }\n\n  ngOnInit(): void {\n    this._store.dispatch(bookActionTypes.loadBooks()); // dispatch load books actions\n    this._store.select(getAllBooksList)\n    .subscribe(result =>  this.books$ = result); // get books list\n    this._store.select(authSelector)\n    .subscribe(state => {\n      if (state) {\n        this.isLoggedIn = state.isAuthenticated;\n      }\n    });\n  }\n\n  // Delete a book\n  OnDeleteBook(bookId: number): void{\n    this._store.dispatch(bookActionTypes.deleteBook({bookId}));\n  }\n\n}\n","<div class=\"home-container\">\n\n  <button *ngIf=\"isLoggedIn\" routerLink=\"/addeditbook\">Add Book</button>\n  <div class=\"card-container\">\n    <div class=\"card\" *ngFor=\"let book of books$\">\n      <div class=\"bk-title\">{{book.title}}</div>\n      <div class=\"bk-author\">Author: {{book.author}}</div>\n      <div class=\"bk-desc\">Description: {{book.desc}}</div>\n      <div class=\"bk-category\">Category: {{book.category}}</div>\n      <div class=\"action-buttons\" *ngIf=\"isLoggedIn\">\n        <button [routerLink]=\"['/addeditbook',book.id]\">Edit Book</button>\n        <button (click)=OnDeleteBook(book.id)>Delete Book</button>\n      </div>\n    </div>\n  </div>\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  BASE_URL: 'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n  public accessToken: string;\n\n  constructor(private _router: Router) {\n    this.accessToken = localStorage.getItem('accessToken');\n  }\n\n  // Redirect to login page if not logged in\n  canActivate(): boolean {\n    if (!this.accessToken) {\n      this._router.navigateByUrl('/loginregister/login');\n    }\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginRegisterService {\n  registerUrl = environment.BASE_URL + 'register';\n  loginUrl = environment.BASE_URL + 'login';\n\n  constructor(private _http: HttpClient) {}\n\n  // Set accesstoken to local storage\n  setAccessToken(token: any): void {\n    localStorage.setItem('accessToken', token);\n  }\n\n  // Get accesstoken from local storage\n  getAccessToken(): any {\n    return localStorage.getItem('accessToken');\n  }\n\n  // Remove accesstoken from local storage\n  removeAccessToken(): void {\n    localStorage.removeItem('accessToken');\n  }\n\n  // Http call to register a new user\n  registerUser(user: User): any {\n    return this._http.post(this.registerUrl, user).pipe(\n      map((data) => {\n        return data;\n      })\n    );\n  }\n\n  // Http call to login an existing user\n  loginUser(user: User): any {\n    return this._http.post(this.loginUrl, user).pipe(\n      map((data) => {\n        return data;\n      })\n    );\n  }\n}\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Book } from '../../models/book';\n\nexport const loadBooks = createAction(\n  '[Books List] Load Books List via Service'\n);\n\nexport const booksLoaded = createAction(\n  '[Books Effect] Books Loaded Successfully',\n  props<{ books: Book[] }>()\n);\nexport const loadBook = createAction(\n  '[Book List] Load Book via Service',\n  props<{ bookId: string | number }>()\n);\n\nexport const bookLoaded = createAction(\n  '[Book Effect] Book Loaded Successfully',\n  props<{ book: Book[] }>()\n);\n\nexport const addBook = createAction(\n  '[Add Book Component] Add Book',\n  props<{ book: Book }>()\n);\n\nexport const deleteBook = createAction(\n  '[Books List Operations] Delete Book',\n  props<{ bookId: number }>()\n);\n\nexport const updateBook = createAction(\n  '[Books List Operations] Update Book',\n  props<{ update: Update<Book> }>()\n);\n\nexport const bookActionTypes = {\n  loadBooks,\n  booksLoaded,\n  loadBook,\n  bookLoaded,\n  addBook,\n  updateBook,\n  deleteBook,\n};\n","import { createAction, props } from '@ngrx/store';\n\nexport const register = createAction('[Auth] Register', props<{ user }>());\n\nexport const registerSuccess = createAction(\n  '[Auth] Register Success',\n  props<{ accessToken }>()\n);\n\nexport const registerFailure = createAction(\n  '[Auth] Register Failure',\n  props<{ error }>()\n);\n","import { Injectable } from '@angular/core';\r\nimport { Actions, ofType, Effect } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { map, mergeMap, catchError } from 'rxjs/operators';\r\nimport { LoginRegisterService } from '../../services/login-register.service';\r\nimport * as LoginActions from '../actions/login.actions';\r\n\r\n@Injectable()\r\nexport class UserEffects {\r\n  @Effect()\r\n  login$ = this._actions$.pipe(\r\n    ofType(LoginActions.login),\r\n    mergeMap((action) =>\r\n      this._loginRegisterService.loginUser(action.user).pipe(\r\n        map((res) => LoginActions.loginSuccess({ accessToken: res })),\r\n        catchError((error) => of(LoginActions.loginFailure({ error })))\r\n      )\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private _actions$: Actions,\r\n    private _loginRegisterService: LoginRegisterService\r\n  ) {}\r\n}\r\n","import { createReducer, on } from '@ngrx/store';\nimport * as RegisterActions from '../actions/register.actions';\nimport { User } from '../../models/user';\n\nexport interface RegisterState {\n  isRegistered: boolean;\n  user: User | null;\n  token: string | null;\n  message: string | null;\n}\n\n// set initial register state\nexport const initialState: RegisterState = {\n  isRegistered: false,\n  user: null,\n  token: null,\n  message: null,\n};\n\nexport const registerReducer = createReducer(\n  initialState,\n  // Register reducer\n  on(RegisterActions.register, (state: RegisterState, action) => {\n    return {\n      ...state,\n      isRegistered: false,\n      user: action.user,\n      token: null,\n      message: null,\n    };\n  }),\n\n  // RegisterSuccess reducer\n  on(RegisterActions.registerSuccess, (state: RegisterState, action) => {\n    return {\n      ...state,\n      isRegistered: true,\n      user: null,\n      token: action.accessToken.accessToken,\n      message: null,\n    };\n  }),\n\n  // RegisterFailuer reducer\n  on(RegisterActions.registerFailure, (state: RegisterState, action) => {\n    return {\n      ...state,\n      isRegistered: false,\n      user: null,\n      token: null,\n      message: action.error,\n    };\n  })\n);\n","import { createEffect, Actions, ofType } from '@ngrx/effects';\nimport { concatMap, map, tap } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { bookActionTypes } from '../actions/books.actions';\nimport { BooksService } from '../../services/books.service';\n\n@Injectable()\nexport class BookEffects {\n  loadBooks$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(bookActionTypes.loadBooks),\n      concatMap(() => this._bookService.getBooks()),\n      map((books) => bookActionTypes.booksLoaded({ books }))\n    )\n  );\n\n  loadBook$ = createEffect(() =>\n    this._actions$.pipe(\n      ofType(bookActionTypes.loadBook),\n      concatMap((action) => this._bookService.getBook(action.bookId)),\n      map((book) => bookActionTypes.bookLoaded({ book: [book] }))\n    )\n  );\n\n  addBook$ = createEffect(\n    () =>\n      this._actions$.pipe(\n        ofType(bookActionTypes.addBook),\n        concatMap((action) => this._bookService.addBook(action.book)),\n        tap(() => this._router.navigateByUrl('/home'))\n      ),\n    { dispatch: false }\n  );\n\n  deleteBook$ = createEffect(\n    () =>\n      this._actions$.pipe(\n        ofType(bookActionTypes.deleteBook),\n        concatMap((action) => this._bookService.deleteBook(action.bookId))\n      ),\n    { dispatch: false }\n  );\n\n  updateBook$ = createEffect(\n    () =>\n      this._actions$.pipe(\n        ofType(bookActionTypes.updateBook),\n        concatMap((action) =>\n          this._bookService.updateBook(action.update.id, action.update.changes)\n        ),\n        tap(() => this._router.navigateByUrl('/home'))\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private _bookService: BooksService,\n    private _actions$: Actions,\n    private _router: Router\n  ) {}\n}\n","import { createSelector, createFeatureSelector } from '@ngrx/store';\nimport { BookState, selectAll } from '../reducers/books.reducer';\n\nexport const booksFeatureSelector = createFeatureSelector<BookState>('books');\n\n// Get all books list\nexport const getAllBooksList = createSelector(booksFeatureSelector, selectAll);\n\n// Get book details\nexport const getBookDetails = createSelector(booksFeatureSelector, selectAll);\n\n// Get id of book\nexport const getCurrentBookId = createSelector(\n  booksFeatureSelector,\n  (state: BookState) => state.selectedBookId\n);\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { ThemeService } from './services/theme.service';\nimport { authSelector } from './store/selectors/login.selector';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit {\n  title = 'shareMyBooks';\n  isLoggedIn = false;\n  switchTheme = new FormControl(false);\n\n  constructor(private _store: Store, private _themeService: ThemeService) {}\n\n  ngOnInit(): void {\n    this._store.select(authSelector).subscribe((state) => {\n      if (state) {\n        this.isLoggedIn = state.isAuthenticated;\n      }\n    });\n  }\n\n  OnChangeTheme(): void {\n    this.switchTheme.valueChanges.subscribe((value) => {\n      if (value) {\n        this._themeService.toggleDark();\n      } else {\n        this._themeService.toggleLight();\n      }\n    });\n  }\n\n  OnLogout(): void {\n    localStorage.removeItem('accessToken');\n    window.location.href = '/home';\n  }\n}\n","<div class=\"content\" role=\"main\">\n  <div class=\"header\" role=\"banner\">\n    <div class=\"primeHeader\">\n      <h1 class=\"header-title\" routerLink=\"/home\">{{title}}</h1>\n      <div class=\"btn-wrapper\">\n        <div class=\"login-buttons\" *ngIf=\"!isLoggedIn\">\n          <a class=\"header-btn\" routerLink=\"/loginregister/login\">Login</a>/\n          <a class=\"header-btn\" routerLink=\"/loginregister/register\">Register</a>\n        </div>\n        <a class=\"header-btn\" routerLink=\"/home\" (click)=\"OnLogout()\" *ngIf=\"isLoggedIn\">Logout</a>\n      </div>\n      <div class=\"theme-select-wrapper\">\n        <label for=\"switchTheme\" class=\"switch\">\n          <input id=\"switchTheme\" type=\"checkbox\" (click)=\"OnChangeTheme()\" [formControl]=\"switchTheme\">\n          <span class=\"slider round\"></span>\n        </label>\n      </div>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</div>","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const login = createAction('[Auth] Login', props<{ user }>());\r\n\r\nexport const loginSuccess = createAction(\r\n  '[Auth] Login Success',\r\n  props<{ accessToken }>()\r\n);\r\n\r\nexport const loginFailure = createAction(\r\n  '[Auth] Login Failure',\r\n  props<{ error }>()\r\n);\r\n","import { Injectable } from '@angular/core';\n\nexport const darkTheme = {\n  'header-color': '#425252',\n  'background-color': '#57595d',\n  'text-color': 'white'\n};\n\n// Light theme properties\nexport const lightTheme = {\n  'header-color': '#a3ced6',\n  'background-color': 'white',\n  'text-color': '#2c2d2f'\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n\n  constructor() { }\n\n  // Set dark theme\n  toggleDark(): void {\n    this.setTheme(darkTheme);\n  }\n\n  // Set light theme\n  toggleLight(): void {\n    this.setTheme(lightTheme);\n  }\n\n  // Set properties of root variables\n  private setTheme(theme: {}): void {\n    Object.keys(theme).forEach(k =>\n      document.documentElement.style.setProperty(`--${k}`, theme[k])\n    );\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { ThemeService } from './services/theme.service';\nimport { AuthGuardService } from './services/authguard.service';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddEditBookComponent } from './add-edit-book/add-edit-book.component';\nimport { UserEffects } from './store/effects/login.effects';\nimport { userReducer } from './store/reducers/login.reducer';\nimport { RegisterEffects } from './store/effects/register.effects';\nimport { registerReducer } from './store/reducers/register.reducer';\nimport { BookEffects } from './store/effects/books.effects';\nimport { bookReducer } from './store/reducers/books.reducer';\nimport { LoginRegisterComponent } from './login-register/login-register.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    AddEditBookComponent,\n    LoginRegisterComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    CommonModule,\n    StoreModule.forRoot({ user: userReducer, register: registerReducer, books: bookReducer }),\n    EffectsModule.forRoot([UserEffects, RegisterEffects, BookEffects]),\n    HttpClientModule\n  ],\n  providers: [ThemeService, AuthGuardService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Book } from '../models/book';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BooksService {\n  private booksUrl = environment.BASE_URL + 'books';\n\n  constructor(private _http: HttpClient) {}\n\n  // Get books list\n  getBooks(): Observable<Book[]> {\n    return this._http.get<Book[]>(this.booksUrl);\n  }\n\n  // Get selected book details\n  getBook(bookId: string | number): Observable<Book> {\n    return this._http.get<Book>(`${this.booksUrl}/${bookId}`);\n  }\n\n  // Add book to bookslist\n  addBook(payload: Book): Observable<Book> {\n    return this._http.post<Book>(this.booksUrl, payload);\n  }\n\n  // Update selected book\n  updateBook(\n    bookId: string | number,\n    changes: Partial<Book>\n  ): Observable<Book> {\n    return this._http.put<Book>(`${this.booksUrl}/${bookId}`, changes);\n  }\n\n  // Delete selected book\n  deleteBook(payload: number): any {\n    return this._http.delete(`${this.booksUrl}/${payload}`);\n  }\n}\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as LoginActions from '../actions/login.actions';\r\n\r\nexport interface AuthState {\r\n  isAuthenticated: boolean;\r\n  loginToken: null;\r\n  message: string | null;\r\n}\r\n\r\n// set initial state\r\nexport const initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  loginToken: null,\r\n  message: null,\r\n};\r\n\r\nexport const userReducer = createReducer(\r\n  initialState,\r\n  // Login Reducer\r\n  on(LoginActions.login, (state: AuthState, action) => {\r\n    return {\r\n      ...state,\r\n      isAuthenticated: false,\r\n      loginToken: null,\r\n      message: null,\r\n    };\r\n  }),\r\n\r\n  // On LoginSuccess\r\n  on(LoginActions.loginSuccess, (state: AuthState, action) => {\r\n    return {\r\n      ...state,\r\n      isAuthenticated: true,\r\n      loginToken: action.accessToken.accessToken,\r\n      message: null,\r\n    };\r\n  }),\r\n\r\n  // On LoginFailure\r\n  on(LoginActions.loginFailure, (state: AuthState, action) => {\r\n    return {\r\n      ...state,\r\n      isAuthenticated: false,\r\n      loginToken: null,\r\n      message: action.error,\r\n    };\r\n  })\r\n);\r\n","import { Injectable } from '@angular/core';\nimport { Actions, ofType, Effect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { map, mergeMap, catchError } from 'rxjs/operators';\nimport { LoginRegisterService } from '../../services/login-register.service';\nimport * as RegisterActions from '../actions/register.actions';\n\n@Injectable()\nexport class RegisterEffects {\n  @Effect()\n  register$ = this._actions$.pipe(\n    ofType(RegisterActions.register),\n    mergeMap((action) =>\n      this._loginRegisterService.registerUser(action.user).pipe(\n        map((res) => RegisterActions.registerSuccess({ accessToken: res })),\n        catchError((error) => of(RegisterActions.registerFailure({ error })))\n      )\n    )\n  );\n\n  constructor(\n    private _actions$: Actions,\n    private _loginRegisterService: LoginRegisterService\n  ) {}\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { AuthState } from '../reducers/login.reducer';\r\n\r\nexport const getAuthReferenceState = createFeatureSelector<AuthState>('user');\r\n\r\n// Get Login state\r\nexport const authSelector = createSelector(\r\n  getAuthReferenceState,\r\n  (state) => state\r\n);\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ReactiveFormsModule, FormControl } from '@angular/forms';\nimport { Store } from '@ngrx/store';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { login } from '../store/actions/login.actions';\nimport { authSelector } from '../store/selectors/login.selector';\nimport * as RegisterActions from '../store/actions/register.actions';\nimport { register } from '../store/actions/register.actions';\nimport { LoginRegisterService } from '../services/login-register.service';\nimport { User } from '../models/user';\n\n@Component({\n  selector: 'app-login-register',\n  templateUrl: './login-register.component.html',\n  styleUrls: ['./login-register.component.scss'],\n})\nexport class LoginRegisterComponent implements OnInit {\n  error: any;\n  form: FormGroup;\n  submitted = false;\n  buttonText: string;\n  username: string;\n  heading: string;\n  user: User;\n  action = 'register';\n  loginResponse: any;\n  registerResponse: any;\n\n  // tslint:disable-next-line: max-line-length\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _router: Router,\n    private _store: Store,\n    private _route: ActivatedRoute,\n    private _loginRegisterService: LoginRegisterService\n  ) {\n    this._route.paramMap.subscribe((params) => {\n      this.action = params.get('action');\n      if (this.action === 'register') {\n        // If 'register' is clicked\n        this.heading = 'Register';\n        this.buttonText = 'Register';\n        this.username = 'Email Id';\n      } else {\n        // If login is clicked\n        this.heading = 'Login';\n        this.buttonText = 'Login';\n        this.username = 'Username';\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.form = this._formBuilder.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n\n  get f(): any {\n    return this.form.controls;\n  }\n\n  OnSubmit(): void {\n    this.submitted = true;\n    const payload = {\n      email: this.f.email.value,\n      password: this.f.password.value,\n    };\n    if (this.form.valid) {\n      // Method called when register button is clicked\n      if (this.action === 'register') {\n        this._store.dispatch(RegisterActions.register({ user: payload }));\n        this._store.select(register).subscribe((response) => {\n          this.registerResponse = response;\n          if (this.registerResponse.register.token) {\n            window.location.href = 'loginregister/login'; // Redirect to login page\n          } else {\n            if (this.registerResponse.register.message) {\n              this.error = this.registerResponse.register.message.error; // Show error message\n            }\n          }\n        });\n      }\n      // Method called when login button is clicked\n      else if (this.action === 'login') {\n        this._store.dispatch(login({ user: payload }));\n        this._store.select(authSelector).subscribe((res) => {\n          if (res) {\n            this.loginResponse = res;\n            this.navigate(res);\n          }\n        });\n      }\n    }\n  }\n\n  navigate(response: any): void {\n    if (response.loginToken) {\n      this._loginRegisterService.setAccessToken(response.loginToken);\n      this._router.navigateByUrl('/home'); // Redirect to home when login attempt successful\n    } else {\n      if (this._loginRegisterService.getAccessToken) {\n        this._loginRegisterService.removeAccessToken();\n      }\n      this.error = response.message;\n    }\n  }\n}\n","<div class=\"containerPane\">\n    <div class=\"loginRegPane\">\n        <div class=\"loginRegContent\">\n            <h1 class=\"loginRegHeader\" id=\"loginRegTitle\">{{heading}}</h1>\n            <hr>\n            <div class=\"loginRegDiv\">\n                <div class=\"alert-danger\" *ngIf=\"error\">{{error.error}}</div>\n\n                <form [formGroup]=\"form\">\n                    <div>\n                        <p class=\"label\" for=\"username\">{{username}}</p>\n                        <input type=\"text\" formControlName=\"email\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"alert-danger\">\n                            <div *ngIf=\"f.email.errors.required\">Username is required</div>\n                        </div>\n                    </div>\n                    <div>\n                        <p class=\"label\" for=\"password\">Password</p>\n                        <input type=\"password\" formControlName=\"password\"\n                            [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"alert-danger\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        </div>\n                    </div>\n                    <br>\n                    <br>\n                    <div>\n                        <button class=\"btn-primary\" id=\"authButton\" (click)=\"OnSubmit()\">{{buttonText}}</button>\n                    </div>\n                </form>\n\n                <p *ngIf=\"action == 'login'\">\n                    Create an account <a routerLink=\"/loginregister/register\">here</a>\n                </p>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AddEditBookComponent } from './add-edit-book/add-edit-book.component';\nimport { AuthGuardService } from './services/authguard.service';\nimport { LoginRegisterComponent } from './login-register/login-register.component';\n\nconst routes: Routes = [\n  {path: 'home', component: HomeComponent},\n  {path: 'loginregister/:action', component: LoginRegisterComponent},\n  {path: 'addeditbook', component: AddEditBookComponent, canActivate: [AuthGuardService]},\n  {path: 'addeditbook/:id', component: AddEditBookComponent, canActivate: [AuthGuardService]},\n  {path: '**', component: HomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}